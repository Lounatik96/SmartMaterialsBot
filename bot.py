import os
import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes, ErrorHandler

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TOKEN")  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –µ–≥–æ –Ω–∞ Render

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–µ", callback_data='info')],
        [InlineKeyboardButton("üìÇ –ü–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", callback_data='templates')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text('–ü—Ä–∏–≤–µ—Ç! –Ø SmartMaterialsBot. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?', reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == 'templates':
        try:
            with open('templates/–ó–∞—è–≤–∫–∞.docm', 'rb') as file:
                await query.message.reply_document(document=file, filename='–ó–∞—è–≤–∫–∞.docm')
            with open('templates/–ê–≤–∞–Ω—Å–æ–≤—ã–π_–æ—Ç—á–µ—Ç.xlsx', 'rb') as file:
                await query.message.reply_document(document=file, filename='–ê–≤–∞–Ω—Å–æ–≤—ã–π_–æ—Ç—á–µ—Ç.xlsx')
            with open('templates/–ù–∞—É—á–Ω—ã–π_–æ—Ç—á–µ—Ç.docx', 'rb') as file:
                await query.message.reply_document(document=file, filename='–ù–∞—É—á–Ω—ã–π_–æ—Ç—á–µ—Ç.docx')
            with open('templates/–ó–∞—è–≤–ª–µ–Ω–∏–µ.docx', 'rb') as file:
                await query.message.reply_document(document=file, filename='–ó–∞—è–≤–ª–µ–Ω–∏–µ.docx')
        except Exception as e:
            await query.message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤: {e}")

    elif query.data == 'info':
        info_text = """
        –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Å–ª—É–∂–µ–±–Ω—É—é –∑–∞–ø–∏—Å–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–µ–∑–¥–∫–µ –∏ —Ç–æ—á–Ω–æ–π —Å–º–µ—Ç–æ–π.

        –°–ª—É–∂–µ–±–Ω–∞—è –∑–∞–ø–∏—Å–∫–∞ —Å–æ–≥–ª–∞—Å–æ–≤—ã–≤–∞–µ—Ç—Å—è:
        ‚Ä¢ –ù–∞—É—á–Ω—ã–º —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º (—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º –Ω–∞—É—á–Ω–æ–π –≥—Ä—É–ø–ø—ã)
        ‚Ä¢ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º –ø—Ä–æ–µ–∫—Ç–∞
        ‚Ä¢ –ö–∞—Ä—Ç–∞—à–æ–≤–∞ –ú.–°. (–∫–∞–±. 201)

        –ü–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ö–æ–ª–µ—Å–Ω–∏—á–µ–Ω–∫–æ –°.–í. (–∫–∞–±. 205):
        ‚Ä¢ –ü–æ –†–æ—Å—Å–∏–∏ ‚Äì –∑–∞ 7 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π –¥–æ –Ω–∞—á–∞–ª–∞ –ø–æ–µ–∑–¥–∫–∏
        ‚Ä¢ –ó–∞—Ä—É–±–µ–∂–æ–º ‚Äì –∑–∞ 5 –Ω–µ–¥–µ–ª—å –¥–æ –Ω–∞—á–∞–ª–∞ –ø–æ–µ–∑–¥–∫–∏

        –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —É—Ç–æ—á–Ω—è–π—Ç–µ —É –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ª–∏—Ü.
        """
        await query.edit_message_text(text=info_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–õ–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –æ—à–∏–±–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    logging.error(f"Update {update} –≤—ã–∑–≤–∞–ª –æ—à–∏–±–∫—É {context.error}")
    
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if isinstance(update, Update) and update.effective_message:
        try:
            await update.effective_message.reply_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            )
        except Exception as send_error:
            logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {send_error}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    application = ApplicationBuilder().token(TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler('start', start))
    application.add_handler(CallbackQueryHandler(button_handler))

    # –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == '__main__':
    main()